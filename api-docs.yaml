openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:9000/api
  description: Generated server url
paths:
  /video/analysis/sevenDaysProjectList:
    post:
      tags:
      - video-analysis-controller
      operationId: sevenDaysProjectList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageVideoProjectDTO'
  /video/analysis/sevenDaysDatasetList:
    post:
      tags:
      - video-analysis-controller
      operationId: sevenDaysDatasetList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageVideoDatasetDTO'
  /video/analysis/chart:
    post:
      tags:
      - video-analysis-controller
      operationId: videoChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /validate/code/image/validate:
    post:
      tags:
      - validate-code-controller
      operationId: validateCode
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /userRole/add:
    post:
      tags:
      - user-role-controller
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /user/update:
    post:
      tags:
      - user-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultUserDTO'
  /user/personal/modify:
    post:
      tags:
      - user-controller
      operationId: modify
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /user/modifyPassword:
    post:
      tags:
      - user-controller
      operationId: modifyPassword
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /user/loginCheck:
    post:
      tags:
      - user-controller
      operationId: check
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /user/list:
    post:
      tags:
      - user-controller
      operationId: list
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageUserDTO'
  /user/add:
    post:
      tags:
      - user-controller
      operationId: add_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /train/modelPackStatus:
    post:
      tags:
      - train-controller
      operationId: modelPackStatus
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTrainDTO'
  /train/list:
    post:
      tags:
      - train-controller
      operationId: list_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageTrainDTO'
  /train/errorDetails/related_images:
    post:
      tags:
      - train-controller
      operationId: errorDetailsRelatedImages
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /train/errorDetails/image_error_detail:
    post:
      tags:
      - train-controller
      operationId: errorDetailsImageErrorDetail
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /train/analysis/training/list:
    post:
      tags:
      - train-analysis-controller
      operationId: modelTraining
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageTrainAnalysisListDTO'
  /train/analysis/queuing/list:
    post:
      tags:
      - train-analysis-controller
      operationId: modelQueuingList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageTrainAnalysisListDTO'
  /train/analysis/chart:
    post:
      tags:
      - train-analysis-controller
      operationId: trainAndQueueChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /train/add:
    post:
      tags:
      - train-controller
      operationId: add_2
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTrainDTO'
  /testResult/getTestResult:
    post:
      tags:
      - test-result-controller
      operationId: getTestResult
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTestResultDTO'
  /test/remote_add:
    post:
      tags:
      - test-controller
      operationId: remoteAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /test/analysis/testing/list:
    post:
      tags:
      - test-analysis-controller
      operationId: modelTesting
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageTestAnalysisListDTO'
  /test/analysis/queuing/list:
    post:
      tags:
      - test-analysis-controller
      operationId: modelQueuing
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageTestAnalysisListDTO'
  /test/analysis/chart:
    post:
      tags:
      - test-analysis-controller
      operationId: testAndQueueChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /test/add:
    post:
      tags:
      - test-controller
      operationId: add_3
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTestDTO'
  /sendVerifyCode:
    post:
      tags:
      - register-info-controller
      operationId: sendVerifyCode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /sdk/download:
    post:
      tags:
      - sdk-download-controller
      operationId: sdkDownload
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /sdk/analysis/list:
    post:
      tags:
      - sdk-analysis-controller
      operationId: sdkDownloadAnalysisList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageSdkAnalysisListDTO'
  /sdk/analysis/chart:
    post:
      tags:
      - sdk-analysis-controller
      operationId: sdkDownloadChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /scene/classify/query:
    post:
      tags:
      - scene-controller
      operationId: sceneClassifyQuery
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageSceneDTO'
  /saleCustomerRelation/claimCustomer:
    post:
      tags:
      - sale-customer-relation-controller
      operationId: claimCustomer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /saleCustomerRelation/alter:
    post:
      tags:
      - sale-customer-relation-controller
      operationId: alter
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /rolePermission/add:
    post:
      tags:
      - role-permission-controller
      operationId: add_4
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /role/update:
    post:
      tags:
      - role-controller
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /role/list:
    post:
      tags:
      - role-controller
      operationId: list_2
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageRoleDTO'
  /role/delete:
    post:
      tags:
      - role-controller
      operationId: delete
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /role/add:
    post:
      tags:
      - role-controller
      operationId: add_5
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /register:
    post:
      tags:
      - register-info-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /register/feiyu:
    post:
      tags:
      - register-info-controller
      operationId: feiyuRegister
      parameters:
      - name: signature
        in: header
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        required: true
        schema:
          type: string
      - name: timestamp
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /projectLabels/list:
    post:
      tags:
      - project-label-controller
      operationId: list_3
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageProjectLabelDTO'
  /projectLabels/caselist:
    post:
      tags:
      - project-label-controller
      operationId: caselist
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageProjectLabelDTO'
  /projectLabels/add:
    post:
      tags:
      - project-label-controller
      operationId: add_6
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /projectCopyRecord/list:
    post:
      tags:
      - project-copy-record-controller
      operationId: list_4
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageProjectCopyRecordDTO'
  /project/update:
    post:
      tags:
      - project-controller
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /project/merge:
    post:
      tags:
      - project-controller
      operationId: merge
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /project/list:
    post:
      tags:
      - project-controller
      operationId: list_5
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageProjectDTO'
  /project/getProjectAndLabelInfo:
    post:
      tags:
      - project-controller
      operationId: getProjectAndLabelInfo
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /project/copy:
    post:
      tags:
      - project-controller
      operationId: copy
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /project/copy2User:
    post:
      tags:
      - project-controller
      operationId: copy2User
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /project/copy2Type:
    post:
      tags:
      - project-controller
      operationId: copy2Type
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /project/copy2RecommendAdmin:
    post:
      tags:
      - project-controller
      operationId: copy2RecommendAdmin
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /project/copy2Customers:
    post:
      tags:
      - project-controller
      operationId: copy2Customers
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /project/add:
    post:
      tags:
      - project-controller
      operationId: add_7
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultProjectDTO'
  /permission/enum_list:
    post:
      tags:
      - permission-controller
      operationId: enumList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListPermissionDTO'
  /newRegister:
    post:
      tags:
      - register-info-controller
      operationId: newRegister
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /ncEmail/firstView:
    post:
      tags:
      - nc-email-controller
      operationId: ncFirstViewEmail
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
  /ncEmail/download:
    post:
      tags:
      - nc-email-controller
      operationId: NcDownloadEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentPackageDownloadList'
        required: true
      responses:
        200:
          description: OK
  /ncEmail/add:
    post:
      tags:
      - nc-email-controller
      operationId: NcAddEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessTemplateDTO'
        required: true
      responses:
        200:
          description: OK
  /ncEmail/active:
    post:
      tags:
      - nc-email-controller
      operationId: NcActiveEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NcActiveTemplate'
        required: true
      responses:
        200:
          description: OK
  /ncClient/saveModelDownloadUrl:
    post:
      tags:
      - nc-client-controller
      operationId: saveModelDownloadUrl
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /model/analysis/list:
    post:
      tags:
      - model-analysis-controller
      operationId: modelDownloadAnalysisList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageModelAnalysisListDTO'
  /model/analysis/chart:
    post:
      tags:
      - model-analysis-controller
      operationId: modelDownloadChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /mmdetModel/update:
    post:
      tags:
      - mmdet-model-controller
      operationId: update_3
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /mmdetModel/list:
    post:
      tags:
      - mmdet-model-controller
      operationId: list_6
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListMmdetModelDTO'
  /mark/uploadzip:
    post:
      tags:
      - mark-controller
      operationId: uploadzip
      parameters:
      - name: projectId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: colorList
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMarkResultDTO'
  /mark/testResult2Mark:
    post:
      tags:
      - mark-controller
      operationId: testResult2Mark
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /mark/saveOrUpdate:
    post:
      tags:
      - mark-controller
      operationId: saveOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMarkDTO'
  /mark/queryPointByImage:
    post:
      tags:
      - mark-controller
      operationId: queryPointByImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointImage'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /mark/getImageMark:
    post:
      tags:
      - mark-controller
      operationId: getImageMark
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMarkDTO'
  /mark/empty:
    post:
      tags:
      - mark-controller
      operationId: empty
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /mark/copyMask:
    post:
      tags:
      - mark-controller
      operationId: copyMask
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /mark/automark:
    post:
      tags:
      - mark-controller
      operationId: automark
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /mark/automarkAll:
    post:
      tags:
      - mark-controller
      operationId: automarkAll
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /mark/analysis/list:
    post:
      tags:
      - mark-analysis-controller
      operationId: markAnalysisList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageMarkAnalysisListDTO'
  /mark/analysis/chart:
    post:
      tags:
      - mark-analysis-controller
      operationId: markAnalysisChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /low_code/analysis/chart:
    post:
      tags:
      - low-code-analysis-controller
      operationId: lowCodeChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /low_code/analysis/addProject/list:
    post:
      tags:
      - low-code-analysis-controller
      operationId: lowCodeAddList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageLowCodeAnalysisListDTO'
  /low_code/analysis/activeProject/list:
    post:
      tags:
      - low-code-analysis-controller
      operationId: lowCodeActiveList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageLowCodeAnalysisListDTO'
  /lowCodePackage/list:
    post:
      tags:
      - low-code-package-download-controller
      operationId: deploymentPackageDownloadList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageDeploymentPackageDownloadListDTO'
  /license/upload:
    post:
      tags:
      - license-controller
      operationId: upload
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /license/save:
    post:
      tags:
      - license-controller
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLicenseVersionDTO'
  /license/records:
    post:
      tags:
      - license-controller
      operationId: records
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageLicenseVersionDTO'
  /license/list:
    post:
      tags:
      - license-controller
      operationId: list_7
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageLicenseVersionDTO'
  /license/getByUser:
    post:
      tags:
      - license-controller
      operationId: getByUser
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMapStringListLicenseVersionDTO'
  /license/delete:
    post:
      tags:
      - license-controller
      operationId: delete_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /label/saveOrUpdate:
    post:
      tags:
      - label-controller
      operationId: saveOrUpdate_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLabelDTO'
  /imageOrigin/upload:
    post:
      tags:
      - image-origin-controller
      operationId: upload_1
      parameters:
      - name: projectId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: sign
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultImageOriginDTO'
  /imageOrigin/imageCheck:
    post:
      tags:
      - image-origin-controller
      operationId: imageCheck
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultImageOriginDTO'
  /image/upload:
    post:
      tags:
      - image-controller
      operationId: upload_2
      parameters:
      - name: projectId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: sign
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultImageDTO'
  /image/uploadzip:
    post:
      tags:
      - image-controller
      operationId: uploadzip_1
      parameters:
      - name: projectId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: colorList
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMarkResultDTO'
  /image/update:
    post:
      tags:
      - image-controller
      operationId: update_4
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /image/sectorDiagramImages:
    post:
      tags:
      - image-controller
      operationId: sectorDiagramImages
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageImageDTO'
  /image/list:
    post:
      tags:
      - image-controller
      operationId: list_8
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageImageDTO'
  /image/imageCheck:
    post:
      tags:
      - image-controller
      operationId: imageCheck_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultImageDTO'
  /image/histogramImages:
    post:
      tags:
      - image-controller
      operationId: histogramImages
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageImageDTO'
  /image/delete:
    post:
      tags:
      - image-controller
      operationId: delete_2
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /image/copyAndMerge:
    post:
      tags:
      - image-controller
      operationId: copyAndMerge
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /image/copyAndMerge/currentProgress:
    post:
      tags:
      - image-controller
      operationId: currentProgress
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /image/analysis/list:
    post:
      tags:
      - image-analysis-controller
      operationId: imageAnalysisList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageImageAnalysisListDTO'
  /image/analysis/imageUploadActive:
    post:
      tags:
      - image-analysis-controller
      operationId: imageUploadActiveAnalysis
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageImageAnalysisListDTO'
  /image/analysis/chart:
    post:
      tags:
      - image-analysis-controller
      operationId: imageAnalysisChart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /hintRecord/addCount:
    post:
      tags:
      - hint-record-controller
      operationId: addCount
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultHintRecord'
  /enum/saveOrUpdate:
    post:
      tags:
      - enum-manage-controller
      operationId: saveOrUpdate_2
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /enum/list:
    post:
      tags:
      - enum-manage-controller
      operationId: list_9
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListEnumManageDTO'
  /email/uploadImage:
    post:
      tags:
      - email-controller
      operationId: uploadImage
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JSONObject'
  /email/save:
    post:
      tags:
      - email-controller
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /email/list:
    post:
      tags:
      - email-controller
      operationId: list_10
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageEmailDTO'
  /debug/sendEmail:
    post:
      tags:
      - debug-controller
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/decryptLicense:
    post:
      tags:
      - debug-controller
      operationId: decryptLicense
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultString'
  /company/update:
    post:
      tags:
      - company-controller
      operationId: update_5
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /company/list:
    post:
      tags:
      - company-controller
      operationId: list_11
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageCompanyDTO'
  /company/getUsers:
    post:
      tags:
      - company-controller
      operationId: getUsers
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageUserDTO'
  /company/add:
    post:
      tags:
      - company-controller
      operationId: add_8
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /comm/pubProject/user/personalList:
    post:
      tags:
      - comm-pub-project-controller
      operationId: personalList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageCommPubProjectDTO'
  /comm/pubProject/user/list:
    post:
      tags:
      - comm-pub-project-controller
      operationId: userList
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageCommPubProjectDTO'
  /comm/pubProject/user/apply:
    post:
      tags:
      - comm-pub-project-controller
      operationId: addApply
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultCommPubApplyerDTO'
  /comm/pubProject/upload:
    post:
      tags:
      - comm-pub-project-controller
      operationId: upload_3
      parameters:
      - name: suffix
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultCommPubResourceDTO'
  /comm/pubProject/update:
    post:
      tags:
      - comm-pub-project-controller
      operationId: update_6
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultCommPubProjectDTO'
  /comm/pubProject/list:
    post:
      tags:
      - comm-pub-project-controller
      operationId: list_12
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageCommPubProjectDTO'
  /comm/pubProject/image_list:
    post:
      tags:
      - comm-pub-project-controller
      operationId: imageList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListCommImageResponseDTO'
  /comm/pubProject/disable:
    post:
      tags:
      - comm-pub-project-controller
      operationId: updateStatus
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /comm/pubProject/approve:
    post:
      tags:
      - comm-pub-project-controller
      operationId: approve
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /comm/pubProject/applyExcel:
    post:
      tags:
      - comm-pub-project-controller
      operationId: crmiamge
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
  /comm/pubProject/add:
    post:
      tags:
      - comm-pub-project-controller
      operationId: add_9
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultCommPubProjectDTO'
  /comm/crmProject/list:
    post:
      tags:
      - comm-crm-project-controller
      operationId: list_13
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageCommCrmProjectDTO'
  /comm/crmProject/list2:
    post:
      tags:
      - comm-crm-project-controller
      operationId: list2
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultPageCommCrmProjectDTO'
  /comm/crmProject/crmiamge:
    post:
      tags:
      - comm-crm-project-controller
      operationId: crmiamge_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListObject'
  /camera/selection:
    post:
      tags:
      - camera-selection-controller
      operationId: cameraSelection
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultCameraSelectionDTO'
  /autoMark/pushResult:
    post:
      tags:
      - auto-mark-controller
      operationId: pushResult
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /agentMark/uploadMark:
    post:
      tags:
      - agent-mark-controller
      operationId: uploadMark
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultInteger'
  /agentMark/terminate:
    post:
      tags:
      - agent-mark-controller
      operationId: terminate
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /agentMark/syncStatus:
    post:
      tags:
      - agent-mark-controller
      operationId: syncStatus
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /agentMark/status:
    post:
      tags:
      - agent-mark-controller
      operationId: status
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultAgentMarkDTO'
  /agentMark/add:
    post:
      tags:
      - agent-mark-controller
      operationId: add_10
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /adjust/add_template:
    post:
      tags:
      - adjust-params-controller
      operationId: addTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /adjust/add_params:
    post:
      tags:
      - adjust-params-controller
      operationId: addParams
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /train/packing/{trainId}/{width}/{height}/{directionimage}/{type}:
    get:
      tags:
      - train-controller
      operationId: packing
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: width
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: height
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: directionimage
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTrainDTO'
  /train/packing/{trainId}/{width}/{height}/{directionimage}:
    get:
      tags:
      - train-controller
      operationId: packing_1
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: width
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: height
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: directionimage
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTrainDTO'
  /video/analysis/total:
    get:
      tags:
      - video-analysis-controller
      operationId: videoTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /validate/code/image:
    get:
      tags:
      - validate-code-controller
      operationId: createCode
      responses:
        200:
          description: OK
  /user/source/export:
    get:
      tags:
      - user-controller
      operationId: excel
      responses:
        200:
          description: OK
  /user/remoteSearch:
    get:
      tags:
      - user-controller
      operationId: remoteSearch
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListUserDTO'
  /user/personal:
    get:
      tags:
      - user-controller
      operationId: personal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultUserDTO'
  /user/getsalesman:
    get:
      tags:
      - user-controller
      operationId: getsalesman
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultString'
  /user/getByUserName/{username}:
    get:
      tags:
      - user-controller
      operationId: getByUserName
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultUserDTO'
  /trigger/status:
    get:
      tags:
      - trigger-controller
      operationId: status_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /trigger/startTrain:
    get:
      tags:
      - trigger-controller
      operationId: startTrain
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /trigger/startTest:
    get:
      tags:
      - trigger-controller
      operationId: startTest
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /trigger/recallTrainingresult:
    get:
      tags:
      - trigger-controller
      operationId: recallTrainingresult
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /trigger/recallTestingresult:
    get:
      tags:
      - trigger-controller
      operationId: recallTestingresult
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /trigger/prepareTransmitTrainData:
    get:
      tags:
      - trigger-controller
      operationId: prepareTransmitTrainData
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /trigger/prepareTransmitTestData:
    get:
      tags:
      - trigger-controller
      operationId: prepareTransmitTestData
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /trigger/assignServerNode:
    get:
      tags:
      - trigger-controller
      operationId: assignServerNode
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /train/train_params/{id}:
    get:
      tags:
      - train-controller
      operationId: trainParamsDetail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTrainDTO'
  /train/train_list/{projectId}:
    get:
      tags:
      - train-controller
      operationId: trainList
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListTrainDTO'
  /train/trainRecallRate/{trainId}:
    get:
      tags:
      - train-controller
      operationId: trainRecallRateAnalyse
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTrainDTO'
  /train/terminate/{trainId}:
    get:
      tags:
      - train-controller
      operationId: terminate_1
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /train/getTrainDetails/{trainId}:
    get:
      tags:
      - train-controller
      operationId: getTrainDetails
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTrainDTO'
  /train/download/{trainId}/{width}/{height}:
    get:
      tags:
      - train-controller
      operationId: downloadModel
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: width
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: height
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
  /train/analysis/total:
    get:
      tags:
      - train-analysis-controller
      operationId: modelTrainTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /testResult/getImageWH/{projectId}/{testId}/{imageName}:
    get:
      tags:
      - test-result-controller
      operationId: getImageWH
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: testId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: imageName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /test/testAnalysis/{projectId}:
    get:
      tags:
      - test-controller
      operationId: testAnalysis
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /test/terminate/{testId}:
    get:
      tags:
      - test-controller
      operationId: terminate_2
      parameters:
      - name: testId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /test/remote_terminate/{testId}:
    get:
      tags:
      - test-controller
      operationId: remoteTerminate
      parameters:
      - name: testId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /test/remote_get_result/{testId}:
    get:
      tags:
      - test-controller
      operationId: remoteGetResult
      parameters:
      - name: testId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTestAllResultDTO'
  /test/getTestDetails/{testId}:
    get:
      tags:
      - test-controller
      operationId: getTestDetails
      parameters:
      - name: testId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTestDTO'
  /test/getLastTestDetails/{projectId}:
    get:
      tags:
      - test-controller
      operationId: getLastTestDetails
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultTestDTO'
  /test/analysis/total:
    get:
      tags:
      - test-analysis-controller
      operationId: modelTestTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /sdk/analysis/total:
    get:
      tags:
      - sdk-analysis-controller
      operationId: sdkDownloadTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /scene/classify/write:
    get:
      tags:
      - scene-controller
      operationId: write
      responses:
        200:
          description: OK
  /role/listTree:
    get:
      tags:
      - role-controller
      operationId: listTree
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListRoleDTO'
  /resource/image/{imagename}:
    get:
      tags:
      - resource-controller
      operationId: image
      parameters:
      - name: imagename
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
  /resource/getsdkurl:
    get:
      tags:
      - resource-controller
      operationId: getSdkUrl
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMapStringString'
  /resource/getoldsdkurl:
    get:
      tags:
      - resource-controller
      operationId: getOldSdkUrl
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMapStringString'
  /resource/getMarkJson/{projectId}/{trainId}:
    get:
      tags:
      - resource-controller
      operationId: getMarkJson
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /resource/getImageByName/{imageName}:
    get:
      tags:
      - resource-controller
      operationId: getImageByName
      parameters:
      - name: imageName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
  /resource/getImage/{imageName}:
    get:
      tags:
      - resource-controller
      operationId: getImage
      parameters:
      - name: imageName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /resource/encrypt/{id}:
    get:
      tags:
      - resource-controller
      operationId: encrypt
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /resource/decrypt/{id}:
    get:
      tags:
      - resource-controller
      operationId: decrypt
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /qichacha/search:
    get:
      tags:
      - qichacha-controller
      operationId: search
      parameters:
      - name: searchKey
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListString'
  /projectLabels/salesmanList:
    get:
      tags:
      - project-label-controller
      operationId: salesmanList
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListObject'
  /projectLabels/labelNameList:
    get:
      tags:
      - project-label-controller
      operationId: labelNameList
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListObject'
  /projectLabels/industryList:
    get:
      tags:
      - project-label-controller
      operationId: industryList
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListObject'
  /projectLabels/detectionList:
    get:
      tags:
      - project-label-controller
      operationId: detectionList
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListObject'
  /project/update_is_point_out/{projectId}:
    get:
      tags:
      - project-controller
      operationId: updateIsPointOut
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultInteger'
  /project/setRotatingParameter/{projectId}/{rotating}:
    get:
      tags:
      - project-controller
      operationId: setRotatingParameter
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: rotating
        in: path
        required: true
        schema:
          type: boolean
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultString'
  /project/max_annotations/{projectId}:
    get:
      tags:
      - project-controller
      operationId: maxAnnotations
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultInteger'
  /project/get_is_point_out/{projectId}:
    get:
      tags:
      - project-controller
      operationId: getIsPointOut
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultInteger'
  /project/getProjectListByType/{type}:
    get:
      tags:
      - project-controller
      operationId: getProjectListByType
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListProjectNameDTO'
  /project/getProjectIdByType/{type}:
    get:
      tags:
      - project-controller
      operationId: getProjectIdByType
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /project/getByCode/{code}:
    get:
      tags:
      - project-controller
      operationId: getByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultProjectDTO'
  /project/details/{id}:
    get:
      tags:
      - project-controller
      operationId: details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultProjectDTO'
  /project/delete/{id}:
    get:
      tags:
      - project-controller
      operationId: delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /project/copyUser2User/{sourceUser}/{targetUser}:
    get:
      tags:
      - project-controller
      operationId: copyUser2User
      parameters:
      - name: sourceUser
        in: path
        required: true
        schema:
          type: string
      - name: targetUser
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /project/code_to_pid/{code}:
    get:
      tags:
      - project-controller
      operationId: codeToProjectId
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /project/code_to_id/{code}:
    get:
      tags:
      - project-controller
      operationId: codeToId
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /picture/upload:
    get:
      tags:
      - picture-upload-controller
      operationId: pictureUpload
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /permission/tree:
    get:
      tags:
      - permission-controller
      operationId: tree
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListPermissionDTO'
  /permission/listTree:
    get:
      tags:
      - permission-controller
      operationId: listTree_1
      parameters:
      - name: roleId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListPermissionDTO'
  /model/analysis/total:
    get:
      tags:
      - model-analysis-controller
      operationId: modelDownloadTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /mmdetModel/downloadPth/{trainId}:
    get:
      tags:
      - mmdet-model-controller
      operationId: downloadPth
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
  /markArea/markWidthAnalysis/{projectId}:
    get:
      tags:
      - mark-area-controller
      operationId: realMarkWidthAnalysis
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListInteger'
  /markArea/dataAnalysis/{projectId}:
    get:
      tags:
      - mark-area-controller
      operationId: markAreaDataAnalysis
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /mark/repealCopyMask/{projectId}:
    get:
      tags:
      - mark-controller
      operationId: repealCopyMask
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultResultCode'
  /mark/markAnalysis/{projectId}:
    get:
      tags:
      - mark-controller
      operationId: markAnalysis
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /mark/getTemplateMark/{projectId}:
    get:
      tags:
      - mark-controller
      operationId: getTemplateMark
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMarkDTO'
  /mark/copyButtonStatus/{projectId}:
    get:
      tags:
      - mark-controller
      operationId: copyButtonStatus
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /mark/annotations_total:
    get:
      tags:
      - mark-controller
      operationId: annotationsTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultInteger'
  /mark/analysis/total:
    get:
      tags:
      - mark-analysis-controller
      operationId: markAnalysisTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultMarkAnalysisTotalDTO'
  /low_code/analysis/total:
    get:
      tags:
      - low-code-analysis-controller
      operationId: lowCodeTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /license/getInfo/{licenseKey}:
    get:
      tags:
      - license-controller
      operationId: getInfo
      parameters:
      - name: licenseKey
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLicenseVersionDTO'
  /license/export/{licenseKey}:
    get:
      tags:
      - license-controller
      operationId: export
      parameters:
      - name: licenseKey
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
  /label/labelListByVersion/{projectId}/{trainId}:
    get:
      tags:
      - label-controller
      operationId: labelListByVersion
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /label/labelList/{projectId}/{trainId}:
    get:
      tags:
      - label-controller
      operationId: labelList
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListModelLabelDTO'
  /label/getLabelByProjectId/{projectId}:
    get:
      tags:
      - label-controller
      operationId: getLabelByProjectId
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLabelDTO'
  /label/getLabel/{projectId}:
    get:
      tags:
      - label-controller
      operationId: getLabel
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLabelDTO'
  /label/empty/{projectId}:
    get:
      tags:
      - label-controller
      operationId: empty_1
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /imageOrigin/resolution/{projectId}:
    get:
      tags:
      - image-origin-controller
      operationId: getResolution
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultImageOriginDTO'
  /image/showOriginalPicture/{id}:
    get:
      tags:
      - image-controller
      operationId: showOriginalPicture
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /image/sectorDiagramAnalysis/{projectId}:
    get:
      tags:
      - image-controller
      operationId: sectorDiagramAnalysis
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /image/resolutionList/{projectId}:
    get:
      tags:
      - image-controller
      operationId: getResolutionList
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListString'
  /image/resolution/{projectId}:
    get:
      tags:
      - image-controller
      operationId: getResolution_1
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultImageDTO'
  /image/packImg:
    get:
      tags:
      - image-controller
      operationId: downloadImg
      responses:
        200:
          description: OK
  /image/downloadOriginalPicture/{id}:
    get:
      tags:
      - image-controller
      operationId: downloadOriginalPicture
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
  /image/downloadImg/{code}/{marked}:
    get:
      tags:
      - image-controller
      operationId: downloadImg_1
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: marked
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
  /image/analysis/total:
    get:
      tags:
      - image-analysis-controller
      operationId: imageAnalysisTotal
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultImageAnalysisTotalDTO'
  /hintRecord/getCount/{hint}:
    get:
      tags:
      - hint-record-controller
      operationId: getCount
      parameters:
      - name: hint
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultInteger'
  /enum/total_list:
    get:
      tags:
      - enum-manage-controller
      operationId: totalList
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListEnumManageDTO'
  /enum/listTree:
    get:
      tags:
      - enum-manage-controller
      operationId: listTree_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListEnumManageDTO'
  /enum/delete/{id}:
    get:
      tags:
      - enum-manage-controller
      operationId: delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /enum/codeTree/{code}:
    get:
      tags:
      - enum-manage-controller
      operationId: codeTree
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListEnumManageDTO'
  /email/send/{emailId}:
    get:
      tags:
      - email-controller
      operationId: send
      parameters:
      - name: emailId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /email/get/{emailId}:
    get:
      tags:
      - email-controller
      operationId: get
      parameters:
      - name: emailId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultEmailDTO'
  /email/delete/{emailId}:
    get:
      tags:
      - email-controller
      operationId: delete_5
      parameters:
      - name: emailId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /dict/getVisionType:
    get:
      tags:
      - dict-controller
      operationId: getVisionType
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListKeyValueDTO'
  /dict/getTrainStatus:
    get:
      tags:
      - dict-controller
      operationId: getTrainStatus
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListKeyValueDTO'
  /dict/getTestStatus:
    get:
      tags:
      - dict-controller
      operationId: getTestStatus
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListKeyValueDTO'
  /debug/xsyToken:
    get:
      tags:
      - debug-controller
      operationId: xsyToken
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/xsySync:
    get:
      tags:
      - debug-controller
      operationId: xsySync
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/washProject:
    get:
      tags:
      - debug-controller
      operationId: washProject
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /debug/washImage:
    get:
      tags:
      - debug-controller
      operationId: washImage
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /debug/sync:
    get:
      tags:
      - debug-controller
      operationId: sync
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /debug/setprojectcode:
    get:
      tags:
      - debug-controller
      operationId: setprojectcode
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/serverInfo:
    get:
      tags:
      - debug-controller
      operationId: serverInfo
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /debug/rename:
    get:
      tags:
      - debug-controller
      operationId: renameFile
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/refreshVersion:
    get:
      tags:
      - debug-controller
      operationId: refreshVersion
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/pid/{pid}:
    get:
      tags:
      - debug-controller
      operationId: list_14
      parameters:
      - name: pid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /debug/pack:
    get:
      tags:
      - debug-controller
      operationId: pack
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/level:
    get:
      tags:
      - debug-controller
      operationId: level
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /debug/fileToSymlink:
    get:
      tags:
      - debug-controller
      operationId: fileToSymlink
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/fileToSymlinkSecond:
    get:
      tags:
      - debug-controller
      operationId: fileToSymlinkSecond
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/encryptId/{id}:
    get:
      tags:
      - debug-controller
      operationId: encryptId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /debug/encodepassword/{password}:
    get:
      tags:
      - debug-controller
      operationId: encodepassword
      parameters:
      - name: password
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultString'
  /debug/email:
    get:
      tags:
      - debug-controller
      operationId: emaillist
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /debug/doDailyStat:
    get:
      tags:
      - debug-controller
      operationId: doDailyStat
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/decrypt/{pid}:
    get:
      tags:
      - debug-controller
      operationId: decrypt_1
      parameters:
      - name: pid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultLong'
  /debug/correctImageLabels/{projectId}:
    get:
      tags:
      - debug-controller
      operationId: correctImageLabels
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /debug/convertRegData:
    get:
      tags:
      - debug-controller
      operationId: convertRegData
      parameters:
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/convertOneModelData/{modelId}:
    get:
      tags:
      - debug-controller
      operationId: convertOneModelData
      parameters:
      - name: modelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/convertModelData:
    get:
      tags:
      - debug-controller
      operationId: convertModelData
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/convertModelDataBatch:
    get:
      tags:
      - debug-controller
      operationId: convertModelDataBatch
      parameters:
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: count
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/convertCoco:
    get:
      tags:
      - debug-controller
      operationId: convertCoco
      parameters:
      - name: type
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /debug/changeMark:
    get:
      tags:
      - debug-controller
      operationId: changeMark
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /data_migration/scp/{trainId}:
    get:
      tags:
      - data-migration-controller
      operationId: scp
      parameters:
      - name: trainId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /data_migration/copy/{ids}:
    get:
      tags:
      - data-migration-controller
      operationId: copy_1
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultString'
  /company/remoteSearch:
    get:
      tags:
      - company-controller
      operationId: remoteSearch_1
      parameters:
      - name: companyName
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListCompanyDTO'
  /comm/pubProject/xsy:
    get:
      tags:
      - comm-pub-project-controller
      operationId: xsy
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResult'
  /comm/pubProject/user/details/{id}:
    get:
      tags:
      - comm-pub-project-controller
      operationId: userProjectDetails
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultCommPubProjectDTO'
  /comm/pubProject/details/{id}:
    get:
      tags:
      - comm-pub-project-controller
      operationId: details_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultCommPubProjectDTO'
  /comm/pubProject/applyNum:
    get:
      tags:
      - comm-pub-project-controller
      operationId: applyNum
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultInteger'
  /autoMark/stop/{projectId}:
    get:
      tags:
      - auto-mark-controller
      operationId: stop
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /autoMark/status/{projectId}:
    get:
      tags:
      - auto-mark-controller
      operationId: status_2
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /autoMark/start/{projectId}:
    get:
      tags:
      - auto-mark-controller
      operationId: start
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBoolean'
  /autoMark/getOneTask:
    get:
      tags:
      - auto-mark-controller
      operationId: getOneTask
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /autoMark/getInfo/{imageId}:
    get:
      tags:
      - auto-mark-controller
      operationId: getInfo_1
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /agentMark/getOneTask:
    get:
      tags:
      - agent-mark-controller
      operationId: getOneTask_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultAgentMarkDTO'
  /adjust/selectVersionContent/{code}/{version}:
    get:
      tags:
      - adjust-params-controller
      operationId: selectVersionContent
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /adjust/selectVersion/{code}:
    get:
      tags:
      - adjust-params-controller
      operationId: selectVersion
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONArray'
  /adjust/get_template/{type}:
    get:
      tags:
      - adjust-params-controller
      operationId: getTrainTemplate
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultListTrainTemplateDTO'
  /adjust/baseinfo/{code}:
    get:
      tags:
      - adjust-params-controller
      operationId: baseInfo
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultBaseInfoDTO'
  /adjust/analysisContent/{code}/{version}:
    get:
      tags:
      - adjust-params-controller
      operationId: analysisContent
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResultJSONObject'
  /swagger-resources:
    get:
      tags:
      - api-resource-controller
      operationId: swaggerResources
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
    put:
      tags:
      - api-resource-controller
      operationId: swaggerResources_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
    post:
      tags:
      - api-resource-controller
      operationId: swaggerResources_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
    delete:
      tags:
      - api-resource-controller
      operationId: swaggerResources_5
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
    options:
      tags:
      - api-resource-controller
      operationId: swaggerResources_6
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
    head:
      tags:
      - api-resource-controller
      operationId: swaggerResources_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
    patch:
      tags:
      - api-resource-controller
      operationId: swaggerResources_4
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
  /swagger-resources/configuration/ui:
    get:
      tags:
      - api-resource-controller
      operationId: uiConfiguration
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UiConfiguration'
    put:
      tags:
      - api-resource-controller
      operationId: uiConfiguration_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UiConfiguration'
    post:
      tags:
      - api-resource-controller
      operationId: uiConfiguration_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UiConfiguration'
    delete:
      tags:
      - api-resource-controller
      operationId: uiConfiguration_5
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UiConfiguration'
    options:
      tags:
      - api-resource-controller
      operationId: uiConfiguration_6
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UiConfiguration'
    head:
      tags:
      - api-resource-controller
      operationId: uiConfiguration_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UiConfiguration'
    patch:
      tags:
      - api-resource-controller
      operationId: uiConfiguration_4
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UiConfiguration'
  /swagger-resources/configuration/security:
    get:
      tags:
      - api-resource-controller
      operationId: securityConfiguration
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
    put:
      tags:
      - api-resource-controller
      operationId: securityConfiguration_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
    post:
      tags:
      - api-resource-controller
      operationId: securityConfiguration_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
    delete:
      tags:
      - api-resource-controller
      operationId: securityConfiguration_5
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
    options:
      tags:
      - api-resource-controller
      operationId: securityConfiguration_6
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
    head:
      tags:
      - api-resource-controller
      operationId: securityConfiguration_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
    patch:
      tags:
      - api-resource-controller
      operationId: securityConfiguration_4
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
  /order/zhuyu:
    get:
      tags:
      - order-controller
      operationId: zhuyu
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
      - order-controller
      operationId: zhuyu_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - order-controller
      operationId: zhuyu_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - order-controller
      operationId: zhuyu_5
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    options:
      tags:
      - order-controller
      operationId: zhuyu_6
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    head:
      tags:
      - order-controller
      operationId: zhuyu_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
      - order-controller
      operationId: zhuyu_4
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /order/order:
    get:
      tags:
      - order-controller
      operationId: order
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
      - order-controller
      operationId: order_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - order-controller
      operationId: order_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - order-controller
      operationId: order_5
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    options:
      tags:
      - order-controller
      operationId: order_6
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    head:
      tags:
      - order-controller
      operationId: order_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
      - order-controller
      operationId: order_4
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /order/hello:
    get:
      tags:
      - order-controller
      operationId: hello
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
      - order-controller
      operationId: hello_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - order-controller
      operationId: hello_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - order-controller
      operationId: hello_5
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    options:
      tags:
      - order-controller
      operationId: hello_6
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    head:
      tags:
      - order-controller
      operationId: hello_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
      - order-controller
      operationId: hello_4
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    OrderItem:
      type: object
      properties:
        column:
          type: string
        asc:
          type: boolean
    PageVideoProjectDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/VideoProjectDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageVideoProjectDTO'
        desc:
          $ref: '#/components/schemas/PageVideoProjectDTO'
        asc:
          $ref: '#/components/schemas/PageVideoProjectDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageVideoProjectDTO'
        ascs:
          $ref: '#/components/schemas/PageVideoProjectDTO'
        pages:
          type: integer
          format: int64
    RestResultPageVideoProjectDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageVideoProjectDTO'
    VideoProjectDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
        description:
          type: string
        type:
          type: string
        trainStatus:
          type: string
        classification:
          type: string
        createTime:
          type: string
          format: date-time
        username:
          type: string
        companyName:
          type: string
    PageVideoDatasetDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/VideoDatasetDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageVideoDatasetDTO'
        desc:
          $ref: '#/components/schemas/PageVideoDatasetDTO'
        asc:
          $ref: '#/components/schemas/PageVideoDatasetDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageVideoDatasetDTO'
        ascs:
          $ref: '#/components/schemas/PageVideoDatasetDTO'
        pages:
          type: integer
          format: int64
    RestResultPageVideoDatasetDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageVideoDatasetDTO'
    VideoDatasetDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
        description:
          type: string
        type:
          type: string
        videos:
          type: integer
          format: int32
        frames:
          type: integer
          format: int32
        markedVideos:
          type: integer
          format: int32
        createTime:
          type: string
          format: date-time
        username:
          type: string
        companyName:
          type: string
    RestResultJSONArray:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          properties:
            relatedArray:
              type: object
            componentType:
              type: object
              properties:
                typeName:
                  type: string
            empty:
              type: boolean
          items:
            type: object
    RestResult:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: object
    RestResultBoolean:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: boolean
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        permissionName:
          type: string
        permissionCode:
          type: string
        route:
          type: string
        pid:
          type: integer
          format: int64
        type:
          type: integer
          format: int32
        sort:
          type: integer
          format: int32
    RestResultUserDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/UserDTO'
    UserDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        registerId:
          type: integer
          format: int64
        name:
          type: string
        job:
          type: string
        telephone:
          type: string
        mobilphone:
          type: string
        email:
          type: string
        companyId:
          type: integer
          format: int64
        companyName:
          type: string
        language:
          type: string
        locked:
          type: boolean
        priority:
          type: integer
          format: int32
        downloadPermission:
          type: integer
          format: int32
        videoSdkPermission:
          type: integer
          format: int32
        emailSwitch:
          type: integer
          format: int32
        type:
          type: string
        valueScore:
          type: integer
          format: int32
        remark:
          type: string
        beginTime:
          type: string
          format: date
        endTime:
          type: string
          format: date
        menus:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        roleName:
          type: string
        isprivate:
          type: boolean
        registerTime:
          type: string
          format: date-time
        createTime:
          type: string
          format: date-time
        isRole:
          type: integer
          format: int32
        registerSourceUrl:
          type: string
        registerSourceName:
          type: string
        sourceName:
          type: string
        keyword:
          $ref: '#/components/schemas/UserDTO'
        salesman:
          type: string
        keyWord:
          type: string
    PageUserDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/UserDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageUserDTO'
        desc:
          $ref: '#/components/schemas/PageUserDTO'
        asc:
          $ref: '#/components/schemas/PageUserDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageUserDTO'
        ascs:
          $ref: '#/components/schemas/PageUserDTO'
        pages:
          type: integer
          format: int64
    RestResultPageUserDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageUserDTO'
    RestResultTrainDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/TrainDTO'
    TrainDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        type:
          type: string
        imageCount:
          type: integer
          format: int32
        trainImageCount:
          type: integer
          format: int32
        testImageCount:
          type: integer
          format: int32
        imageTotalSize:
          type: integer
          format: int64
        markCount:
          type: integer
          format: int32
        markLabelDetails:
          type: string
        status:
          type: string
        statusName:
          type: string
        priority:
          type: integer
          format: int32
        serverId:
          type: integer
          format: int64
        serverInfo:
          type: string
        serverPid:
          type: integer
          format: int32
        reservedMemory:
          type: integer
          format: int32
        maxMemory:
          type: integer
          format: int32
        timeLog:
          type: string
        progress:
          type: string
        progressValue:
          type: number
          format: double
        packStatus:
          type: string
        isTrainAndTest:
          type: integer
          format: int32
        downloadPermission:
          type: boolean
        companyName:
          type: string
        trainParams:
          type: string
        testParams:
          type: string
        enhanceParams:
          type: string
        runTest:
          type: integer
          format: int32
        learningCurve:
          type: array
          items:
            type: number
            format: double
        report:
          type: string
        reasonCode:
          type: integer
          format: int32
        reasonDetails:
          type: string
        aiMark:
          type: integer
          format: int32
        paras:
          type: string
        inputH:
          type: integer
          format: int32
        inputW:
          type: integer
          format: int32
        detectionsPerImage:
          type: integer
          format: int32
        trainStartTime:
          type: string
        trainEndTime:
          type: string
        accuracy:
          type: string
        version:
          type: string
        trainTime:
          type: string
        labelTypes:
          type: integer
          format: int32
        queueTime:
          type: integer
          format: int32
        executeTime:
          type: integer
          format: int32
        imageTotal:
          type: integer
          format: int32
        modelExportType:
          type: string
        createTime:
          type: string
          format: date-time
        isRotate:
          type: integer
          format: int32
        typeNum:
          type: integer
          format: int32
        isSplit:
          type: integer
          format: int32
        row:
          type: integer
          format: int32
        col:
          type: integer
          format: int32
        threshold:
          type: number
          format: double
        labelDatas:
          type: array
          properties:
            relatedArray:
              type: object
            componentType:
              type: object
              properties:
                typeName:
                  type: string
            empty:
              type: boolean
          items:
            type: object
        yoloType:
          type: string
        modelType:
          type: string
        modelUrl:
          type: string
        exportMsg:
          type: string
    PageTrainDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/TrainDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageTrainDTO'
        desc:
          $ref: '#/components/schemas/PageTrainDTO'
        asc:
          $ref: '#/components/schemas/PageTrainDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageTrainDTO'
        ascs:
          $ref: '#/components/schemas/PageTrainDTO'
        pages:
          type: integer
          format: int64
    RestResultPageTrainDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageTrainDTO'
    JSONObject:
      type: object
      properties:
        empty:
          type: boolean
      additionalProperties:
        type: object
    RestResultJSONObject:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    PageTrainAnalysisListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/TrainAnalysisListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageTrainAnalysisListDTO'
        desc:
          $ref: '#/components/schemas/PageTrainAnalysisListDTO'
        asc:
          $ref: '#/components/schemas/PageTrainAnalysisListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageTrainAnalysisListDTO'
        ascs:
          $ref: '#/components/schemas/PageTrainAnalysisListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageTrainAnalysisListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageTrainAnalysisListDTO'
    TrainAnalysisListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int64
        username:
          type: string
        companyName:
          type: string
        projectType:
          type: string
        markTotalImagePercentage:
          type: string
        queuingForAssignmentBegining:
          type: string
        queuingForAssignmentCompleted:
          type: string
        queuingTotalTime:
          type: integer
          format: int32
        training:
          type: string
        trainingCompleted:
          type: string
        trainingTotalTime:
          type: integer
          format: int32
        maxMemory:
          type: integer
          format: int32
        beginTime:
          type: string
        endTime:
          type: string
        beginLocalDateTime:
          type: string
          format: date-time
        endLocalDateTime:
          type: string
          format: date-time
        imageCount:
          type: integer
          format: int32
        imageTotal:
          type: integer
          format: int32
        markedImageCount:
          type: integer
          format: int32
        timeLog:
          type: string
        code:
          type: string
        order:
          type: string
        status:
          type: string
        orderField:
          type: string
        salesman:
          type: string
    RestResultTestResultDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/TestResultDTO'
    TestResultDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        imageId:
          type: integer
          format: int64
        testId:
          type: integer
          format: int64
        testData:
          type: string
    TestDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isTrainAndTest:
          type: integer
          format: int32
        type:
          type: string
        createTime:
          type: string
          format: date-time
        imageCount:
          type: integer
          format: int32
        imageTotalSize:
          type: integer
          format: int64
        status:
          type: string
        statusName:
          type: string
        priority:
          type: integer
          format: int32
        serverId:
          type: integer
          format: int64
        serverInfo:
          type: string
        serverPid:
          type: integer
          format: int32
        reservedMemory:
          type: integer
          format: int32
        maxMemory:
          type: integer
          format: int32
        timeLog:
          type: string
        progress:
          type: string
        progressValue:
          type: number
          format: double
        queueTime:
          type: integer
          format: int32
        executeTime:
          type: integer
          format: int32
        isRotate:
          type: integer
          format: int32
        imageNames:
          type: array
          items:
            type: string
        ossPath:
          type: string
        source:
          type: integer
          format: int32
    RestResultLong:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: integer
          format: int64
    PageTestAnalysisListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/TestAnalysisListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageTestAnalysisListDTO'
        desc:
          $ref: '#/components/schemas/PageTestAnalysisListDTO'
        asc:
          $ref: '#/components/schemas/PageTestAnalysisListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageTestAnalysisListDTO'
        ascs:
          $ref: '#/components/schemas/PageTestAnalysisListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageTestAnalysisListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageTestAnalysisListDTO'
    TestAnalysisListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int64
        username:
          type: string
        companyName:
          type: string
        projectType:
          type: string
        markTotalImagePercentage:
          type: string
        queuingForAssignmentBegining:
          type: string
        queuingForAssignmentCompleted:
          type: string
        queuingTotalTime:
          type: integer
          format: int32
        testing:
          type: string
        testingCompleted:
          type: string
        testingTotalTime:
          type: integer
          format: int32
        maxMemory:
          type: integer
          format: int32
        beginTime:
          type: string
        endTime:
          type: string
        beginLocalDateTime:
          type: string
          format: date-time
        endLocalDateTime:
          type: string
          format: date-time
        imageCount:
          type: integer
          format: int32
        markedImageCount:
          type: integer
          format: int32
        timeLog:
          type: string
        code:
          type: string
        order:
          type: string
        status:
          type: string
        orderField:
          type: string
        salesman:
          type: string
    RestResultTestDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/TestDTO'
    PageSdkAnalysisListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/SdkAnalysisListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageSdkAnalysisListDTO'
        desc:
          $ref: '#/components/schemas/PageSdkAnalysisListDTO'
        asc:
          $ref: '#/components/schemas/PageSdkAnalysisListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageSdkAnalysisListDTO'
        ascs:
          $ref: '#/components/schemas/PageSdkAnalysisListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageSdkAnalysisListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageSdkAnalysisListDTO'
    SdkAnalysisListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int64
        username:
          type: string
        companyName:
          type: string
        projectType:
          type: string
        imageCount:
          type: integer
          format: int32
        markedImageCount:
          type: integer
          format: int32
        beginTime:
          type: string
        endTime:
          type: string
        beginLocalDateTime:
          type: string
          format: date-time
        endLocalDateTime:
          type: string
          format: date-time
        markTotalImagePercentage:
          type: string
        sdkType:
          type: string
        downloadTime:
          type: string
          format: date-time
        code:
          type: string
        salesman:
          type: string
    PageSceneDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/SceneDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageSceneDTO'
        desc:
          $ref: '#/components/schemas/PageSceneDTO'
        asc:
          $ref: '#/components/schemas/PageSceneDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageSceneDTO'
        ascs:
          $ref: '#/components/schemas/PageSceneDTO'
        pages:
          type: integer
          format: int64
    RestResultPageSceneDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageSceneDTO'
    SceneDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        name:
          type: string
        subtitle:
          type: string
        keywords:
          type: string
        information:
          type: string
        createTime:
          type: string
          format: date-time
        sceneType:
          type: string
        functionType:
          type: string
        caseImageName:
          type: string
        testImageName:
          type: string
        caseIntroduction:
          type: string
        caseDetectionResult:
          type: string
        testDetectionResult:
          type: string
        imageMoreName:
          type: string
        imageListName:
          type: string
        isEn:
          type: integer
          format: int32
        language:
          type: string
    PageRoleDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/RoleDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageRoleDTO'
        desc:
          $ref: '#/components/schemas/PageRoleDTO'
        asc:
          $ref: '#/components/schemas/PageRoleDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageRoleDTO'
        ascs:
          $ref: '#/components/schemas/PageRoleDTO'
        pages:
          type: integer
          format: int64
    RestResultPageRoleDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageRoleDTO'
    RoleDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        roleName:
          type: string
        roleCode:
          type: string
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        updateTime:
          type: string
          format: date-time
        updateBy:
          type: string
        checked:
          type: boolean
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        sign:
          type: string
        name:
          type: string
        suffix:
          type: string
        size:
          type: integer
          format: int64
        localPath:
          type: string
        netPath:
          type: string
        isDel:
          type: integer
          format: int32
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        updateTime:
          type: string
          format: date-time
        updateBy:
          type: string
        isRotate:
          type: integer
          format: int32
        labels:
          type: string
        resolution:
          type: string
    PageProjectLabelDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ProjectLabelDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageProjectLabelDTO'
        desc:
          $ref: '#/components/schemas/PageProjectLabelDTO'
        asc:
          $ref: '#/components/schemas/PageProjectLabelDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageProjectLabelDTO'
        ascs:
          $ref: '#/components/schemas/PageProjectLabelDTO'
        pages:
          type: integer
          format: int64
    ProjectLabelDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        industryId:
          type: integer
          format: int64
        industry:
          type: string
        detectionId:
          type: integer
          format: int64
        detection:
          type: string
        detectionIdArr:
          type: array
          items:
            type: integer
            format: int64
        detectionInput:
          type: string
        labelsId:
          type: string
        labels:
          type: array
          items:
            type: string
        labelsIdArr:
          type: array
          items:
            type: integer
            format: int64
        labelInput:
          type: string
        updateTime:
          type: string
          format: date-time
        createTime:
          type: string
          format: date-time
        createProjectTime:
          type: string
          format: date-time
        code:
          type: string
        longCode:
          type: integer
          format: int64
        companyName:
          type: string
        salesman:
          type: string
        totalUploadImage:
          type: integer
          format: int32
        markedImageCount:
          type: integer
          format: int32
        username:
          type: string
        usernameHideList:
          type: array
          items:
            type: string
        projectType:
          type: string
        isLabeled:
          type: integer
          format: int32
        imgNum:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        firstImg:
          $ref: '#/components/schemas/Image'
        baseUrl:
          type: string
    RestResultPageProjectLabelDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageProjectLabelDTO'
    PageProjectCopyRecordDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCopyRecordDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageProjectCopyRecordDTO'
        desc:
          $ref: '#/components/schemas/PageProjectCopyRecordDTO'
        asc:
          $ref: '#/components/schemas/PageProjectCopyRecordDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageProjectCopyRecordDTO'
        ascs:
          $ref: '#/components/schemas/PageProjectCopyRecordDTO'
        pages:
          type: integer
          format: int64
    ProjectCopyRecordDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        sourceProjectId:
          type: integer
          format: int64
        targetProjectId:
          type: integer
          format: int64
        sourceUserId:
          type: integer
          format: int64
        targetUserId:
          type: integer
          format: int64
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        updateTime:
          type: string
          format: date-time
        updateBy:
          type: string
        projectId:
          type: integer
          format: int64
        sourceCompany:
          type: string
        targetCompany:
          type: string
        sourceEmail:
          type: string
        targetEmail:
          type: string
        markNum:
          type: integer
          format: int32
        imageNum:
          type: integer
          format: int32
    RestResultPageProjectCopyRecordDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageProjectCopyRecordDTO'
    PageProjectDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageProjectDTO'
        desc:
          $ref: '#/components/schemas/PageProjectDTO'
        asc:
          $ref: '#/components/schemas/PageProjectDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageProjectDTO'
        ascs:
          $ref: '#/components/schemas/PageProjectDTO'
        pages:
          type: integer
          format: int64
    ProjectDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        code:
          type: string
        remark:
          type: string
        trainStatus:
          type: string
        testStatus:
          type: string
        isPointOut:
          type: integer
          format: int32
        createTime:
          type: string
          format: date-time
        imageNum:
          type: integer
          format: int32
        markNum:
          type: integer
          format: int32
        trainTimes:
          type: integer
          format: int32
        testTimes:
          type: integer
          format: int32
        labelTypes:
          type: integer
          format: int32
        train:
          $ref: '#/components/schemas/TrainDTO'
        test:
          $ref: '#/components/schemas/TestDTO'
        needTestResult:
          type: boolean
        masterProjectId:
          type: integer
          format: int64
        mergeProjectId:
          type: integer
          format: int64
        colorList:
          type: array
          items:
            type: string
        customerIdList:
          type: array
          items:
            type: integer
            format: int64
        createBeginTime:
          type: string
          format: date-time
        createEndTime:
          type: string
          format: date-time
        projectStatus:
          type: string
        userId:
          type: integer
          format: int64
        targetUserName:
          type: string
        copyNum:
          type: integer
          format: int32
        targetType:
          type: string
        isCopy:
          type: integer
          format: int32
        needMark:
          type: boolean
        withParams:
          type: boolean
        isSplit:
          type: integer
          format: int32
        col:
          type: integer
          format: int32
        row:
          type: integer
          format: int32
        isRotate:
          type: integer
          format: int32
        rotating:
          type: boolean
    RestResultPageProjectDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageProjectDTO'
    RestResultProjectDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/ProjectDTO'
    PermissionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        permissionName:
          type: string
        permissionCode:
          type: string
        route:
          type: string
        pid:
          type: integer
          format: int64
        checked:
          type: boolean
        icon:
          type: string
    RestResultListPermissionDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/PermissionDTO'
    DeploymentPackageDownloadList:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        username:
          type: string
        companyName:
          type: string
        projectName:
          type: string
        downloadType:
          type: string
        downloadTime:
          type: string
        isDeep:
          type: integer
          format: int32
    ProcessTemplateDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        code:
          type: string
        name:
          type: string
        template:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        createBeginTime:
          type: string
        createEndTime:
          type: string
        updateBeginTime:
          type: string
        updateEndTime:
          type: string
        updateTime:
          type: string
        createTime:
          type: string
        remark:
          type: string
        isDeep:
          type: integer
          format: int32
        activeTime:
          type: string
    NcActiveTemplate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        userId:
          type: integer
          format: int64
        userName:
          type: string
        companyName:
          type: string
        name:
          type: string
        activeTime:
          type: string
        isDeep:
          type: integer
          format: int32
    ModelAnalysisListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int64
        username:
          type: string
        companyName:
          type: string
        projectType:
          type: string
        imageCount:
          type: integer
          format: int32
        markedImageCount:
          type: integer
          format: int32
        beginTime:
          type: string
        endTime:
          type: string
        beginLocalDateTime:
          type: string
          format: date-time
        endLocalDateTime:
          type: string
          format: date-time
        markTotalImagePercentage:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        downloadTime:
          type: string
          format: date-time
        code:
          type: string
        salesman:
          type: string
    PageModelAnalysisListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ModelAnalysisListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageModelAnalysisListDTO'
        desc:
          $ref: '#/components/schemas/PageModelAnalysisListDTO'
        asc:
          $ref: '#/components/schemas/PageModelAnalysisListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageModelAnalysisListDTO'
        ascs:
          $ref: '#/components/schemas/PageModelAnalysisListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageModelAnalysisListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageModelAnalysisListDTO'
    MmdetModelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        trainId:
          type: integer
          format: int64
        isConverted:
          type: integer
          format: int32
        pthUrl:
          type: string
        onnxUrl:
          type: string
        typeNum:
          type: integer
          format: int32
        type:
          type: string
        schedule:
          type: integer
          format: int32
        sourceType:
          type: string
        quantizedType:
          type: integer
          format: int32
    RestResultListMmdetModelDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/MmdetModelDTO'
    MarkResultDTO:
      type: object
      properties:
        total:
          type: integer
          format: int32
        successNum:
          type: integer
          format: int32
        failNum:
          type: integer
          format: int32
        failList:
          type: array
          items:
            type: string
    RestResultMarkResultDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/MarkResultDTO'
    MarkDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        imageId:
          type: integer
          format: int64
        markData:
          type: string
        testId:
          type: integer
          format: int64
        type:
          type: integer
          format: int32
        imageCount:
          type: integer
          format: int32
        markNum:
          type: integer
          format: int32
        isTemplate:
          type: integer
          format: int32
        isAdjust:
          type: integer
          format: int32
        copyMask:
          type: integer
          format: int32
    RestResultMarkDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/MarkDTO'
    PointImage:
      type: object
      properties:
        imgBase64:
          type: string
        projectId:
          type: integer
          format: int64
    MarkAnalysisListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        username:
          type: string
        companyName:
          type: string
        projectType:
          type: string
        totalUploadMark:
          type: integer
          format: int32
        date:
          type: string
          format: date
        code:
          type: string
        salesman:
          type: string
    PageMarkAnalysisListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/MarkAnalysisListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageMarkAnalysisListDTO'
        desc:
          $ref: '#/components/schemas/PageMarkAnalysisListDTO'
        asc:
          $ref: '#/components/schemas/PageMarkAnalysisListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageMarkAnalysisListDTO'
        ascs:
          $ref: '#/components/schemas/PageMarkAnalysisListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageMarkAnalysisListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageMarkAnalysisListDTO'
    LowCodeAnalysisListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        code:
          type: string
        username:
          type: string
        companyName:
          type: string
        projectName:
          type: string
        createTime:
          type: string
        activeTime:
          type: string
        beginLocalDateTime:
          type: string
          format: date-time
        endLocalDateTime:
          type: string
          format: date-time
        salesman:
          type: string
        deep:
          type: boolean
    PageLowCodeAnalysisListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/LowCodeAnalysisListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageLowCodeAnalysisListDTO'
        desc:
          $ref: '#/components/schemas/PageLowCodeAnalysisListDTO'
        asc:
          $ref: '#/components/schemas/PageLowCodeAnalysisListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageLowCodeAnalysisListDTO'
        ascs:
          $ref: '#/components/schemas/PageLowCodeAnalysisListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageLowCodeAnalysisListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageLowCodeAnalysisListDTO'
    DeploymentPackageDownloadListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        username:
          type: string
        companyName:
          type: string
        code:
          type: string
        projectName:
          type: string
        downloadTime:
          type: string
        beginLocalDateTime:
          type: string
          format: date-time
        endLocalDateTime:
          type: string
          format: date-time
        salesman:
          type: string
    PageDeploymentPackageDownloadListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentPackageDownloadListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageDeploymentPackageDownloadListDTO'
        desc:
          $ref: '#/components/schemas/PageDeploymentPackageDownloadListDTO'
        asc:
          $ref: '#/components/schemas/PageDeploymentPackageDownloadListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageDeploymentPackageDownloadListDTO'
        ascs:
          $ref: '#/components/schemas/PageDeploymentPackageDownloadListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageDeploymentPackageDownloadListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageDeploymentPackageDownloadListDTO'
    LicenseVersionDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        licenseKey:
          type: string
        username:
          type: string
        authType:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        validDays:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        operatorType:
          type: string
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        companyName:
          type: string
        registerTime:
          type: string
          format: date-time
        firstName:
          type: string
        lastName:
          type: string
        name:
          type: string
        createBeginTime:
          type: string
          format: date-time
        createEndTime:
          type: string
          format: date-time
        expireBeginTime:
          type: string
          format: date-time
        expireEndTime:
          type: string
          format: date-time
        authStatus:
          type: integer
          format: int32
        modelType:
          type: string
        modelTypeName:
          type: string
        labelCount:
          type: integer
          format: int32
        isUsed:
          type: integer
          format: int32
        message:
          type: string
    RestResultLicenseVersionDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/LicenseVersionDTO'
    PageLicenseVersionDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/LicenseVersionDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageLicenseVersionDTO'
        desc:
          $ref: '#/components/schemas/PageLicenseVersionDTO'
        asc:
          $ref: '#/components/schemas/PageLicenseVersionDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageLicenseVersionDTO'
        ascs:
          $ref: '#/components/schemas/PageLicenseVersionDTO'
        pages:
          type: integer
          format: int64
    RestResultPageLicenseVersionDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageLicenseVersionDTO'
    RestResultMapStringListLicenseVersionDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/LicenseVersionDTO'
    LabelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        projectId:
          type: integer
          format: int64
        labelData:
          type: string
        delLabelName:
          type: string
        origionalLabelName:
          type: string
        newLabelName:
          type: string
        oprateType:
          type: integer
          format: int32
        isAllowedTesting:
          type: integer
          format: int32
        origionalLabelColor:
          type: string
        newLabelColor:
          type: string
        category_id:
          type: integer
          format: int64
        category_name:
          type: string
        login:
          type: boolean
    RestResultLabelDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/LabelDTO'
    ImageOriginDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        sign:
          type: string
        name:
          type: string
        suffix:
          type: string
        size:
          type: integer
          format: int64
        localPath:
          type: string
        netPath:
          type: string
        isDel:
          type: integer
          format: int32
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        updateTime:
          type: string
          format: date-time
        updateBy:
          type: string
        signStatus:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        splitNum:
          type: integer
          format: int32
    RestResultImageOriginDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/ImageOriginDTO'
    ImageDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        idList:
          type: array
          items:
            type: integer
            format: int64
        projectId:
          type: integer
          format: int64
        sign:
          type: string
        name:
          type: string
        suffix:
          type: string
        size:
          type: integer
          format: int64
        localPath:
          type: string
        netPath:
          type: string
        isRotate:
          type: integer
          format: int32
        markFlag:
          type: integer
          format: int32
        checkedId:
          type: integer
          format: int64
        checked:
          type: boolean
        fullName:
          type: string
        beginTime:
          type: string
          format: date
        endTime:
          type: string
          format: date
        createTime:
          type: string
          format: date-time
        testResultMarkCount:
          type: integer
          format: int32
        signStatus:
          type: string
        baseUrl:
          type: string
        isprivate:
          type: boolean
        markNum:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        trainId:
          type: integer
          format: int64
        packStatus:
          type: string
        modelExportType:
          type: string
        isTemplate:
          type: integer
          format: int32
        isAdjust:
          type: integer
          format: int32
        labelList:
          type: array
          items:
            type: string
        imageStatus:
          type: integer
          format: int32
        labelEmpty:
          type: boolean
        order:
          type: boolean
        orderField:
          type: string
        queryFlag:
          type: string
        resolution:
          type: string
        labels:
          type: string
        isAutoMarked:
          type: integer
          format: int32
        sourceType:
          type: string
    RestResultImageDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/ImageDTO'
    PageImageDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ImageDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageImageDTO'
        desc:
          $ref: '#/components/schemas/PageImageDTO'
        asc:
          $ref: '#/components/schemas/PageImageDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageImageDTO'
        ascs:
          $ref: '#/components/schemas/PageImageDTO'
        pages:
          type: integer
          format: int64
    RestResultPageImageDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageImageDTO'
    ImageAnalysisListDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        username:
          type: string
        companyName:
          type: string
        projectType:
          type: string
        totalUploadImage:
          type: integer
          format: int32
        totalUploadImageNum:
          type: integer
          format: int32
        date:
          type: string
          format: date
        beginLocalDateTime:
          type: string
          format: date-time
        endLocalDateTime:
          type: string
          format: date-time
        uploadDateTime:
          type: string
          format: date-time
        code:
          type: string
        salesman:
          type: string
    PageImageAnalysisListDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ImageAnalysisListDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageImageAnalysisListDTO'
        desc:
          $ref: '#/components/schemas/PageImageAnalysisListDTO'
        asc:
          $ref: '#/components/schemas/PageImageAnalysisListDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageImageAnalysisListDTO'
        ascs:
          $ref: '#/components/schemas/PageImageAnalysisListDTO'
        pages:
          type: integer
          format: int64
    RestResultPageImageAnalysisListDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageImageAnalysisListDTO'
    HintRecord:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        hint:
          type: string
        count:
          type: integer
          format: int32
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        updateTime:
          type: string
          format: date-time
        updateBy:
          type: string
    RestResultHintRecord:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/HintRecord'
    EnumManageDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        enumName:
          type: string
        enumCode:
          type: string
        sort:
          type: integer
          format: int32
        pid:
          type: integer
          format: int64
        enumDesc:
          type: string
        isDel:
          type: integer
          format: int32
    RestResultListEnumManageDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/EnumManageDTO'
    EmailDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        subject:
          type: string
        content:
          type: string
        sendTo:
          type: string
        status:
          type: string
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        updateTime:
          type: string
          format: date-time
        updateBy:
          type: string
    PageEmailDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/EmailDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageEmailDTO'
        desc:
          $ref: '#/components/schemas/PageEmailDTO'
        asc:
          $ref: '#/components/schemas/PageEmailDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageEmailDTO'
        ascs:
          $ref: '#/components/schemas/PageEmailDTO'
        pages:
          type: integer
          format: int64
    RestResultPageEmailDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageEmailDTO'
    RestResultString:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: string
    CompanyDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        companyName:
          type: string
        createTime:
          type: string
          format: date-time
    PageCompanyDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/CompanyDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageCompanyDTO'
        desc:
          $ref: '#/components/schemas/PageCompanyDTO'
        asc:
          $ref: '#/components/schemas/PageCompanyDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageCompanyDTO'
        ascs:
          $ref: '#/components/schemas/PageCompanyDTO'
        pages:
          type: integer
          format: int64
    RestResultPageCompanyDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageCompanyDTO'
    CommPubApplyerDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        uid:
          type: integer
          format: int64
        status:
          type: integer
          format: int32
        approveBy:
          type: string
        approveInfo:
          type: string
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        errorMessage:
          type: string
        errorNum:
          type: integer
          format: int64
        salesmanName:
          type: string
        salesmanPhone:
          type: string
        phone:
          type: string
        applyerName:
          type: string
        totalApplyNum:
          type: integer
          format: int32
        passApplyNum:
          type: integer
          format: int32
        imageNum:
          type: integer
          format: int32
        projectNum:
          type: integer
          format: int32
    CommPubProjectDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        crmId:
          type: integer
          format: int64
        title:
          type: string
        desc:
          type: string
        labels:
          type: array
          items:
            type: string
        cate:
          type: string
        cateList:
          type: array
          items:
            type: string
        budget:
          type: integer
          format: int32
        demandCompany:
          type: string
        owner:
          type: string
        areaList:
          type: array
          items:
            type: string
        area:
          type: string
        city:
          type: string
        industry:
          type: string
        contact:
          type: string
        phone:
          type: string
        maxApply:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
        isMaxApply:
          type: integer
          format: int32
        startCreateTime:
          type: string
          format: date-time
        endCreateTime:
          type: string
          format: date-time
        applyStatus:
          type: integer
          format: int32
        applyNum:
          type: integer
          format: int32
        toApproveNum:
          type: integer
          format: int32
        updateTime:
          type: string
          format: date-time
        createTime:
          type: string
          format: date-time
        publishBy:
          type: string
        applyArea:
          type: string
        imgs:
          type: array
          items:
            $ref: '#/components/schemas/CommPubResourceDTO'
        applyInfo:
          type: array
          items:
            $ref: '#/components/schemas/CommPubApplyerDTO'
        views:
          type: integer
          format: int32
        applyFulled:
          type: integer
          format: int32
        applyLookLikeFulled:
          type: integer
          format: int32
        type:
          type: integer
          format: int32
        typeList:
          type: array
          items:
            type: integer
            format: int32
    CommPubResourceDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        sign:
          type: string
        name:
          type: string
        suffix:
          type: string
        type:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        localPath:
          type: string
        netPath:
          type: string
        isDel:
          type: integer
          format: int32
    PageCommPubProjectDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/CommPubProjectDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageCommPubProjectDTO'
        desc:
          $ref: '#/components/schemas/PageCommPubProjectDTO'
        asc:
          $ref: '#/components/schemas/PageCommPubProjectDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageCommPubProjectDTO'
        ascs:
          $ref: '#/components/schemas/PageCommPubProjectDTO'
        pages:
          type: integer
          format: int64
    RestResultPageCommPubProjectDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageCommPubProjectDTO'
    RestResultCommPubApplyerDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/CommPubApplyerDTO'
    RestResultCommPubResourceDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/CommPubResourceDTO'
    RestResultCommPubProjectDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/CommPubProjectDTO'
    BaseRequestDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        uid:
          type: integer
          format: int64
    CommImageResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        path:
          type: string
        uploadTime:
          type: string
    RestResultListCommImageResponseDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommImageResponseDTO'
    CommCrmProjectDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        crmId:
          type: integer
          format: int64
        title:
          type: string
        desc:
          type: string
        labels:
          type: array
          items:
            type: string
        cate:
          type: string
        budget:
          type: integer
          format: int32
        demandCompany:
          type: string
        owner:
          type: string
        area:
          type: string
        city:
          type: string
        industry:
          type: string
        contact:
          type: string
        phone:
          type: string
        ownerPhone:
          type: string
        maxApply:
          type: integer
          format: int64
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        isUsed:
          type: integer
          format: int32
        image:
          type: integer
          format: int64
        video:
          type: string
        type:
          type: integer
          format: int32
    PageCommCrmProjectDTO:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/CommCrmProjectDTO'
        total:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        current:
          type: integer
          format: int64
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        optimizeCountSql:
          $ref: '#/components/schemas/PageCommCrmProjectDTO'
        desc:
          $ref: '#/components/schemas/PageCommCrmProjectDTO'
        asc:
          $ref: '#/components/schemas/PageCommCrmProjectDTO'
        searchCount:
          type: boolean
        descs:
          $ref: '#/components/schemas/PageCommCrmProjectDTO'
        ascs:
          $ref: '#/components/schemas/PageCommCrmProjectDTO'
        pages:
          type: integer
          format: int64
    RestResultPageCommCrmProjectDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PageCommCrmProjectDTO'
    RestResultListObject:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            type: object
    CameraSelectionDTO:
      type: object
      properties:
        cameraPixelLen:
          type: integer
          format: int32
        cameraPixelWidth:
          type: integer
          format: int32
        cameraPixel:
          type: integer
          format: int32
        minFocalDistance:
          type: integer
          format: int32
        maxFocalDistance:
          type: integer
          format: int32
    RestResultCameraSelectionDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/CameraSelectionDTO'
    RestResultInteger:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: integer
          format: int32
    AgentMarkDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        status:
          type: string
        dataUrl:
          type: string
        createTime:
          type: string
          format: date-time
        createBy:
          type: string
        updateTime:
          type: string
          format: date-time
        updateBy:
          type: string
        type:
          type: string
    RestResultAgentMarkDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/AgentMarkDTO'
    RestResultListUserDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserDTO'
    RestResultListTrainDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/TrainDTO'
    RestResultTestAllResultDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/TestAllResultDTO'
    TestAllResultDTO:
      type: object
      properties:
        projectId:
          type: integer
          format: int64
        trainId:
          type: integer
          format: int64
        testId:
          type: integer
          format: int64
        testData:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JSONObject'
        status:
          type: string
    RestResultListRoleDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/RoleDTO'
    RestResultMapStringString:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: object
          additionalProperties:
            type: string
    RestResultListString:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            type: string
    ProjectNameDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    RestResultListProjectNameDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectNameDTO'
    RestResultListInteger:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            type: integer
            format: int32
    RestResultResultCode:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: string
          enum:
          - SUCCESS
          - COMMON_FAIL
          - NO_PERMITION
          - NO_ERROR
          - BUSINESS_FAIL
          - TEST_FAIL
          - PARAM_NOT_VALID
          - COMPRESSED_PACKAGE_FILE_FORMAT_ERROR
          - ENUM_CODE_CAN_NOT_CONTAINS_CHINESE
          - ENUM_CODE_EXIST
          - PROJECT_TYPE_SHOULD_BE_OCR
          - USER_MAIL_EXISTS
          - USER_MOBIL_EXISTS
          - USER_REGISTER_FAIL
          - USER_USERNAME_PASSORD_ERROR
          - USER_PASSORD_SAME_ERROR
          - USER_PASSORD_NOT_SAME_ERROR
          - USER_ORIGINAL_PASSORD_ERROR
          - USER_CLAIM_CUSTOMERS_ERROR
          - ROLE_NAME_EXISTS
          - ROLE_CODE_CONFLICT
          - ROLE_INNER_MODIFY_ERROR
          - ROLE_EMPTY_ERROR
          - RECOMMEND_ADMIN_EMPTY_ERROR
          - PERMISSION_EMPTY_ERROR
          - COMPANY_NAME_EXISTS_ERROR
          - PROGECT_NAME_EXISTS_ERROR
          - PROGECT_LOCKED_ERROR
          - PROGECT_TYPE_INCONSISTENT_ERROR
          - PROJECT_USER_ALL_NOT_TECH_SUPPORT
          - IMAGE_COMPRESS_ERROR
          - IMAGE_UPLOAD_ERROR
          - NOT_SUPPORTED_ERROR
          - IMAGE_EXISTS_ERROR
          - LARGE_FILE_ERROR
          - IMAGE_FORMAT_ERROR
          - LABEL_DATA_MISSING_ERROR
          - LABEL_DATA_FORMAT_ERROR
          - LABEL_DATA_DEL_ERROR
          - DUPLICATE_LABEL_NAME_ERROR
          - LABEL_NAME_NULL_ERROR
          - MARK_DATA_MISSING_ERROR
          - MARK_DATA_FORMAT_ERROR
          - MARK_DATA_INFO_ERROR
          - MARK_DATA_IMAGES_ERROR
          - MARK_DATA_LICENSES_ERROR
          - MARK_DATA_CATEGORIES_ERROR
          - MARK_DATA_ANNOTATIONS_ERROR
          - MARK_DATA_CATEGORIES_LABEL_NAME_MISSING_ERROR
          - MARK_DATA_ANNOTATIONS_LABEL_NAME_MISSING_ERROR
          - MARK_DATA_ANNOTATIONS_LABEL_NAME_UNKNOWN_ERROR
          - FIle_UPLOAD_ERROR
          - INCORRECT_SUFFIX_ERROR
          - File_EXISTS_ERROR
          - FILE_DAMAGE_ERROR
          - NO_IMAGE_ERROR
          - NO_MARKE_ERROR
          - EXISTS_UNFINISHED_TRAINING_ERROR
          - PREPARE_DATA_ERROR
          - NO_TEST_IMAGE_ERROR
          - NO_SUCCESS_TRAIN_ERROR
          - EXISTS_UNFINISHED_TESTING_ERROR
          - NO_MODEL_DOWNLOAD_PERMISSION_ERROR
          - MODEL_ZIP_NOT_EXISTS_ERROR
          - NO_LABEL_ERROR
          - NO_SUCCESS_TRAIN_ERROR_NOT_ALLOW_TEST
          - MARKED_IMAGE_LESS
          - LABEL_MARK_LESS
          - IS_AI_MARK_ERROR
          - NO_TESTRESULT_NOT_MARK
          - TEST_NOT_ALLOWED
          - VALIDATE_NOT_BLANK
          - VALIDATE_FAILD
          - VALIDATE_GET_FAILD
          - MESSAGE_VALIDATE_NOT_BLANK
          - MESSAGE_VALIDATE_FAILD
          - MESSAGE_VALIDATE_NOT_EXIST
          - MESSAGE_VALIDATE_EXPIRED
          - MESSAGE_VALIDATE_SEND_FAILD
          - NOT_LOGGED_IN
          - NO_PERMISSION
          - NO_OPERATION_PERMISSION
          - REPEAT_LOGIN
          - ALREADY_LOGIN
          - UNKNOWN
    MarkAnalysisTotalDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        dailyUploadAmount:
          type: integer
          format: int32
        date:
          type: string
          format: date
        markUploadTotal:
          type: integer
          format: int32
        todayMarkUploadTotal:
          type: integer
          format: int32
    RestResultMarkAnalysisTotalDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/MarkAnalysisTotalDTO'
    ModelLabelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category_id:
          type: integer
          format: int64
        category_name:
          type: string
        color:
          type: string
    RestResultListModelLabelDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/ModelLabelDTO'
    ImageAnalysisTotalDTO:
      type: object
      properties:
        pageNum:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        dailyUploadAmount:
          type: integer
          format: int32
        date:
          type: string
          format: date
        imageUploadTotal:
          type: integer
          format: int32
        todayImageUploadTotal:
          type: integer
          format: int32
    RestResultImageAnalysisTotalDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/ImageAnalysisTotalDTO'
    RestResultEmailDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/EmailDTO'
    KeyValueDTO:
      type: object
      properties:
        stringkey:
          type: string
        integerkey:
          type: integer
          format: int32
        value:
          type: string
    RestResultListKeyValueDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueDTO'
    RestResultListCompanyDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/CompanyDTO'
    RestResultListTrainTemplateDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/TrainTemplateDTO'
    TrainTemplateDTO:
      type: object
      properties:
        templateName:
          type: string
        type:
          type: integer
          format: int32
        params:
          type: string
        instruction:
          type: string
    BaseInfoDTO:
      type: object
      properties:
        projectId:
          type: integer
          format: int64
        code:
          type: string
        projectName:
          type: string
        companyName:
          type: string
        userName:
          type: string
        createTime:
          type: string
        markedImgCount:
          type: integer
          format: int32
        imgCount:
          type: integer
          format: int32
        trainCount:
          type: integer
          format: int32
        adjustCount:
          type: integer
          format: int32
        typeName:
          type: string
        typeDesc:
          type: string
        typeNum:
          type: integer
          format: int32
        enableEnhance:
          type: boolean
        copyNum:
          type: integer
          format: int32
        trainRecord:
          type: array
          properties:
            relatedArray:
              type: object
            componentType:
              type: object
              properties:
                typeName:
                  type: string
            empty:
              type: boolean
          items:
            type: object
        yoloType:
          type: string
        thresholdChoice:
          type: string
        xparams:
          type: string
        cparams:
          type: string
    RestResultBaseInfoDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errorCode:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/BaseInfoDTO'
    SwaggerResource:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        swaggerVersion:
          type: string
        location:
          type: string
          deprecated: true
    UiConfiguration:
      type: object
      properties:
        deepLinking:
          type: boolean
        displayOperationId:
          type: boolean
        defaultModelsExpandDepth:
          type: integer
          format: int32
        defaultModelExpandDepth:
          type: integer
          format: int32
        defaultModelRendering:
          type: string
          enum:
          - example
          - model
        displayRequestDuration:
          type: boolean
        docExpansion:
          type: string
          enum:
          - none
          - list
          - full
        filter:
          type: object
        maxDisplayedTags:
          type: integer
          format: int32
        operationsSorter:
          type: string
          enum:
          - alpha
          - method
        showExtensions:
          type: boolean
        tagsSorter:
          type: string
          enum:
          - alpha
        validatorUrl:
          type: string
        apisSorter:
          type: string
          deprecated: true
        jsonEditor:
          type: boolean
          deprecated: true
        showRequestHeaders:
          type: boolean
          deprecated: true
        supportedSubmitMethods:
          type: array
          items:
            type: string
    SecurityConfiguration:
      type: object
      properties:
        apiKey:
          type: string
          deprecated: true
        apiKeyVehicle:
          type: string
          deprecated: true
        apiKeyName:
          type: string
          deprecated: true
        clientId:
          type: string
        clientSecret:
          type: string
        realm:
          type: string
        appName:
          type: string
        scopeSeparator:
          type: string
        additionalQueryStringParams:
          type: object
          additionalProperties:
            type: object
        useBasicAuthenticationWithAccessCodeGrant:
          type: boolean
